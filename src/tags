!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
F0	plate.c	/^double F0(void * p) {$/;"	f
Fanar	plate.c	/^double Fanar(void * p) {$/;"	f
Fanat	plate.c	/^double Fanat(void * p) {$/;"	f
Ffreer	plate.c	/^double Ffreer(void * p) {$/;"	f
Ffreet	plate.c	/^double Ffreet(void * p) {$/;"	f
Gint	plate.c	/^void Gint(double complex Gten[Ndim][Ndim], double w, void * p, unsigned int RorI, unsigned int kx, unsigned int theta, unsigned int T) {$/;"	f
IntQF	plate.c	/^double IntQF(double w, void * p) {$/;"	f
Ndim	h/qfhelp.h	19;"	d
PI	h/qfhelp.h	18;"	d
QF	plate.c	/^double QF(double IntQF(), void * p) {$/;"	f
QFr	h/plate.h	/^    double v, za, QFt, QFr;$/;"	m	struct:parameters
QFt	h/plate.h	/^    double v, za, QFt, QFr;$/;"	m	struct:parameters
a0	h/plate.h	/^    double c, hbar, eps0, a0;$/;"	m	struct:parameters
aF	h/plate.h	/^    double vF, aF;$/;"	m	struct:parameters
abserr	h/plate.h	/^    double relerr, recerr, abserr;$/;"	m	struct:parameters
alpha	plate.c	/^void alpha(double complex alp[Ndim][Ndim], double w, void * p) {$/;"	f
beta	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
c	h/plate.h	/^    double c, hbar, eps0, a0;$/;"	m	struct:parameters
cquad	qfhelp.c	/^double cquad(double my_f(), void * p, double a , double b, double relerr, double epsabs) {$/;"	f
dagger	qfhelp.c	/^void dagger(double complex mat[Ndim][Ndim], double complex res[Ndim][Ndim]) {$/;"	f
einf	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
eps0	h/plate.h	/^    double c, hbar, eps0, a0;$/;"	m	struct:parameters
fancy	qfhelp.c	/^void fancy(double complex mat[Ndim][Ndim], double complex res[Ndim][Ndim], int mode) {$/;"	f
g1	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
gamMu	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
hbar	h/plate.h	/^    double c, hbar, eps0, a0;$/;"	m	struct:parameters
input	plate.c	/^void input(char file[], unsigned int verbose) {$/;"	f
inputparams	h/plate.h	/^struct parameters inputparams;$/;"	v	typeref:struct:parameters
integinf	qfhelp.c	/^double integinf(double my_f(), void * p, double a, double relerr, double epsabs) {$/;"	f
kcut	h/plate.h	/^    double kcut;$/;"	m	struct:parameters
main	main.c	/^int main (int argc, char *argv[]) {$/;"	f
mu	plate.c	/^double complex mu(double w, void *p) {$/;"	f
multiply	qfhelp.c	/^void multiply(double complex mat1[Ndim][Ndim], double complex mat2[Ndim][Ndim], double complex res[Ndim][Ndim]) {$/;"	f
muquest	h/plate.h	/^    unsigned int muquest;$/;"	m	struct:parameters
omsgn	h/plate.h	/^    unsigned int omsgn;$/;"	m	struct:parameters
parameters	h/plate.h	/^struct parameters {$/;"	s
qags	qfhelp.c	/^double qags(double my_f(), void * p, double a , double b, double relerr, double epsabs) {$/;"	f
recerr	h/plate.h	/^    double relerr, recerr, abserr;$/;"	m	struct:parameters
refl	plate.c	/^void refl(double complex r[2], double w, double complex kap, void * p) {$/;"	f
relerr	h/plate.h	/^    double relerr, recerr, abserr;$/;"	m	struct:parameters
retard	h/plate.h	/^    unsigned int retard;$/;"	m	struct:parameters
runvar	h/plate.h	/^    char runvar[100];$/;"	m	struct:parameters
scale	h/plate.h	/^    char scale[100];$/;"	m	struct:parameters
start	h/plate.h	/^    double start;$/;"	m	struct:parameters
steps	h/plate.h	/^    unsigned int steps;$/;"	m	struct:parameters
stop	h/plate.h	/^    double stop;$/;"	m	struct:parameters
tr	qfhelp.c	/^const double complex tr(double complex mat[Ndim][Ndim]) {$/;"	f
transpose	qfhelp.c	/^void transpose(double complex mat[Ndim][Ndim], double complex res[Ndim][Ndim]) {$/;"	f
transroll	h/plate.h	/^    unsigned int transroll;$/;"	m	struct:parameters
v	h/plate.h	/^    double v, za, QFt, QFr;$/;"	m	struct:parameters
vF	h/plate.h	/^    double vF, aF;$/;"	m	struct:parameters
wa	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
wp1	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
wsp1	h/plate.h	/^    double wp1, wsp1, wa, gamMu, g1, einf, beta;$/;"	m	struct:parameters
za	h/plate.h	/^    double v, za, QFt, QFr;$/;"	m	struct:parameters
